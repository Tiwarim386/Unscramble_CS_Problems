# -*- coding: utf-8 -*-
"""Unscramble CS Problems Solutions

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gexzqo_HAzbgHJVXVyZkarmFOHCgYetR
"""

import csv
with open('texts.csv', 'r') as f:
    reader = csv.reader(f)
    texts = list(reader)

with open('calls.csv', 'r') as f:
    reader = csv.reader(f)
    calls = list(reader)

print("First record of texts, {} texts {} at time {}"
      .format(texts[0][0], texts[0][1], texts[0][2]))
print("Last record of calls, {} calls {} at time {}, lasting {} seconds"
      .format(calls[-1][0], calls[-1][1], calls[-1][2], calls[-1][3]))

import csv
with open('texts.csv', 'r') as f:
    reader = csv.reader(f)
    texts = list(reader)

with open('calls.csv', 'r') as f:
    reader = csv.reader(f)
    calls = list(reader)

telephone_numbers = set()

for i in range(len(texts)):
    telephone_numbers.add(texts[i][0])
    telephone_numbers.add(texts[i][1])
    
for i in range(len(calls)):
    telephone_numbers.add(calls[i][0])
    telephone_numbers.add(calls[i][1])

print("There are {} different telephone numbers in the records.".format(
    len(telephone_numbers)))

from datetime import datetime

import csv
with open('texts.csv', 'r') as f:
    reader = csv.reader(f)
    texts = list(reader)

with open('calls.csv', 'r') as f:
    reader = csv.reader(f)
    calls = list(reader)

def getCallsByMonthYear(phoneCall, month, year):

    timestamp = phoneCall[2]
    dt = datetime.strptime(timestamp, '%d-%m-%Y %H:%M:%S')
    if(dt.year == year and dt.month == month):
        return True
    else:
        return False


def trackCallDuration(dictionary, phoneNumber, callDuration):
    if(dictionary.get(phoneNumber) == None):
        dictionary[phoneNumber] = callDuration
    else:
        dictionary[phoneNumber] = int(
            dictionary.get(phoneNumber)) + int(callDuration)
    return dictionary

records = filter(lambda x: getCallsByMonthYear(x, 9, 2016), calls)


dictionary = {}
for record in records:
    outgoingNumber = record[0]
    recievingNumber = record[1]
    timestamp = record[2]
    callDuration = record[3]

    dictionary = trackCallDuration(dictionary, outgoingNumber, callDuration)
    dictionary = trackCallDuration(dictionary, recievingNumber, callDuration)


phoneMax = max(dictionary.items(), key=lambda x: int(x[1]))



print(f"{phoneMax[0]} spent the longest time, {phoneMax[1]} seconds, on the phone during September 2016.")

import csv

with open('texts.csv', 'r') as f:
    reader = csv.reader(f)
    texts = list(reader)

with open('calls.csv', 'r') as f:
    reader = csv.reader(f)
    calls = list(reader)

# Implementing Part A
called_numbers = []
for i in range(len(calls)):
    if calls[i][0][:5] == '(080)':
        if calls[i][1][0] == '(':
            par_index = calls[i][1].find(')')
            called_numbers.append(calls[i][1][:par_index+1])
        elif calls[i][1][:3] == '140':
            called_numbers.append('140')
        else:
            called_numbers.append(calls[i][1][:4])

l = len(called_numbers)
count = called_numbers.count('(080)')
called_numbers = sorted(set(called_numbers))
print("The numbers called by people in Bangalore have codes:")
for code in called_numbers:
    print(code)

    
    
# Implementing Part B

percent = count * 100 / l
print("{} percent of calls from fixed lines in Bangalore are calls to other fixed lines in Bangalore.".format(round(percent, 2)))

import csv
from itertools import chain
with open('texts.csv', 'r') as f:
    reader = csv.reader(f)
    texts = list(reader)

with open('calls.csv', 'r') as f:
    reader = csv.reader(f)
    calls = list(reader)


telephone_numbers_in_texts = list(chain.from_iterable(
    [(sender, reciever) for sender, reciever, _ in texts]))

texters = set(telephone_numbers_in_texts)

callers = set()
call_recievers = set()

for caller, reciever, _, _ in calls:
    callers.add(caller)
    call_recievers.add(reciever)

# Since telemarkerters don't text or recieve callers

possible_telemarkerters = callers - (texters | call_recievers)

print("These numbers could be telemarketers:")

for tel_number in sorted(possible_telemarkerters):
    print(tel_number)